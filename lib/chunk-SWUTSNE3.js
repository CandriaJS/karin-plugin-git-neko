import C from'node:path';import {fileURLToPath}from'node:url';import D,{requireFileSync,karinPathBase,copyConfigSync,filesByExt,YamlEditor,watch,getFiles,config,segment}from'node-karin';var T=Object.defineProperty;var B=(o,e)=>{for(var i in e)T(o,i,{get:e[i],enumerable:true});};var b=fileURLToPath(import.meta.url).replace(/\\/g,"/"),p=C.resolve(b,"../../").replace(/\\/g,"/"),v=C.basename(p),d=requireFileSync(`${p}/package.json`),r={get Bot_Name(){return config.pkg().name==="node-karin"?"Karin":config.pkg().name},get Bot_Version(){return config.pkg().version},get Bot_Path(){return process.cwd().replace(/\\/g,"/")},get Plugin_Path(){return p},get Plugin_Name(){return v},get Plugin_AliasName(){return "\u6E05\u8BEDGit\u63D2\u4EF6"},get Plugin_Version(){return d.version},get Plugin_Anthor(){return d.author}};var h=class{dirCfgPath;defCfgPath;constructor(){this.dirCfgPath=`${karinPathBase}/${r.Plugin_Name}/config/`,this.defCfgPath=`${r.Plugin_Path}/config/defSet/`;}initCfg(){copyConfigSync(this.defCfgPath,this.dirCfgPath);let e=filesByExt(this.dirCfgPath,".yaml","name");for(let t of e){let s=new YamlEditor(`${this.dirCfgPath}/${t}`),n=new YamlEditor(`${this.defCfgPath}/${t}`),{differences:a,result:f}=this.mergeObjectsWithPriority(s,n);a&&f.save();}return filesByExt(this.dirCfgPath,".yaml","abs").forEach(t=>watch(t,(s,n)=>{})),this}getDefOrConfig(e){let i=this.getYaml("defSet",e),t=this.getYaml("config",e);return {...i,...t}}All(){let e={};return getFiles(this.defCfgPath,[".yaml"]).forEach(t=>{let s=C.basename(t,".yaml");e[s]=this.getDefOrConfig(s)??{};}),e}getYaml(e,i){let t=e==="config"?`${this.dirCfgPath}/${i}.yaml`:`${this.defCfgPath}/${i}.yaml`;return requireFileSync(t,{force:true})}Modify(e,i,t,s="config"){let n=s==="config"?`${this.dirCfgPath}/${e}.yaml`:`${this.defCfgPath}/${e}.yaml`,a=new YamlEditor(n);a.set(i,t),a.save();}mergeObjectsWithPriority(e,i){let t=false;return ((n,a)=>{let f=a.get(n),u=e.get(n);if(typeof u=="object"&&typeof f=="object")for(let g in f)g in u||(t=true,e.set(`${""}${g}`,f[g]));})("",i),{differences:t,result:e}}},$=new Proxy(Object.assign(new h().initCfg(),{}),{get(o,e){return e in o?Reflect.get(o,e):o.getDefOrConfig(e)}});function j(o=1){let e=$.other.renderScale||100,i=Math.min(2,Math.max(.5,e/100));return o=o*i,`style=transform:scale(${o})`}var Q={async render(o,e={}){o=o.replace(/.html$/,"");let i=`${r.Plugin_Path}/resources`,t=await D.render({type:"jpeg",encoding:"base64",name:`${o}`.replace(/\\/g,"/"),file:`${i}/${o}.html`,data:{_res_path:`${r.Plugin_Path}/resources`.replace(/\\/g,"/"),defaultLayout:`${r.Plugin_Path}/resources/common/layout/default.html`.replace(/\\/g,"/"),gitLayout:`${r.Plugin_Path}/resources/common/layout/git.html`.replace(/\\/g,"/"),sys:{scale:j(e.scale??1)},copyright:`${r.Bot_Name}<span class="version"> ${r.Bot_Version}</span> & ${r.Plugin_Name}<span class="version"> ${r.Plugin_Version}`,...e},screensEval:"#containter",pageGotoParams:{waitUntil:"load",timeout:6e4}});return segment.image(`${t.startsWith("base64://")?t:`base64://${t}`}`)}};
export{B as a,r as b,$ as c,Q as d};